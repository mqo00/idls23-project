[
    {
        "question": "IDL Piazza Question @1114\nBeam search passing first test case but not second?\nHi,\n\nIn my code, I have tried to emulate the behaviour of the pseudocode fig. 19 from the writeup for beam search. I am clearing the first test case (which I am guessing means that the best path and the entire path dict is matching exactly). but for the second one, I am getting an incorrect best path. I will probably try to debug with someone's help in OH but in case you have seen such an issue before with someone else where the first passed but the second didnt, could you help me understand what might be going wrong? Thanks a lot in advance :)",
        "gpt_answer": "It's difficult to pinpoint the exact issue without seeing your code, but here are some common reasons why the first test case might pass but the second one fails:\n\n1. The second test case might have a different structure or length than the first one, causing your code to fail to generalize to different inputs.\n\n2. There might be a bug in your code that only manifests itself for certain inputs. You can try to print out intermediate results and compare them with the expected output to identify where the bug might be.\n\n3. Your beam size might be too small for the second test case, causing the algorithm to miss the optimal path. You can try increasing the beam size and see if that improves the results.\n\nI would recommend going through your code step by step and comparing it with the pseudocode to make sure that you are implementing the algorithm correctly. Additionally, you can try to run your code on other inputs to see if it produces the expected output. If you are still having trouble, feel free to ask for help during office hours or on Piazza.",
        "hash": "3827f7e551d80f7ab4f8bea547d348323adb38fef8c578a60630dc6e036407cc"
    },
    {
        "question": "IDL Piazza Question @1114\nBeam search passing first test case but not second?\nHi,\n\nIn my code, I have tried to emulate the behaviour of the pseudocode fig. 19 from the writeup for beam search. I am clearing the first test case (which I am guessing means that the best path and the entire path dict is matching exactly). but for the second one, I am getting an incorrect best path. I will probably try to debug with someone's help in OH but in case you have seen such an issue before with someone else where the first passed but the second didnt, could you help me understand what might be going wrong? Thanks a lot in advance :)",
        "gpt_answer": "Hi there! It's great to hear that you're making progress on the beam search implementation. It's not uncommon for the first test case to pass but the second one to fail, as the second test case may have different edge cases or requirements that your implementation may not be handling correctly.\n\nWithout seeing your code or the specific test cases, it's difficult to pinpoint exactly what might be going wrong. However, some common issues with beam search implementations include:\n\n1. Incorrectly updating the beam: Make sure that you're correctly updating the beam at each step of the search, and that you're only keeping the top-k paths based on their scores.\n\n2. Incorrectly handling duplicate paths: If your implementation is generating duplicate paths, this can cause issues with the beam search. Make sure that you're properly handling duplicate paths and not adding them to the beam.\n\n3. Incorrectly handling end-of-sequence tokens: If your implementation is not properly handling end-of-sequence tokens, this can cause issues with the beam search. Make sure that you're correctly terminating paths when they reach the end-of-sequence token.\n\nI hope this helps! If you're still having trouble, feel free to bring your code to office hours or post a follow-up question on Piazza with more details about your implementation and the specific test cases that are failing.",
        "hash": "a5064c718ccbc72a47cdc270811da17f35246409f2ad8b15d9d681e186a59e87"
    },
    {
        "question": "IDL Piazza Question @1108\nGetting val dist as 15 but test as 70\nHi for HW3P2 i'm Getting val dist as 15 but test as 70. How can I resolve this",
        "gpt_answer": "It's difficult to provide a specific solution without more information about the problem and your implementation. However, here are some general tips that may help:\n\n1. Check your code for bugs: Make sure that your code is correctly implemented and that there are no syntax errors or logical mistakes. Double-check your calculations and make sure that you are using the correct variables and functions.\n\n2. Check your data: Make sure that you are using the correct data for the validation and test sets. Check that the data is correctly formatted and that there are no missing values or outliers.\n\n3. Check your hyperparameters: Make sure that you are using the correct hyperparameters for your model. Try adjusting the learning rate, batch size, or number of epochs to see if this improves your results.\n\n4. Use cross-validation: Cross-validation can help you get a better estimate of your model's performance. Try using k-fold cross-validation to see if your results are consistent across different folds.\n\n5. Seek help: If you are still having trouble, don't hesitate to ask for help. Reach out to your instructor or TA, or post a question on the course forum or Piazza.",
        "hash": "2598edcf64f2ab8583fdccf48d270b49056048d1c2e812b04c701550341773c4"
    },
    {
        "question": "IDL Piazza Question @1091 skip connect\n\n\nI'm having hard time understanding what skipConnect do here.\u00a0\nIt says in write up skipConnect keep track of whether an extended symbol Sext(j) is allowed to connect\u00a0 directly to Sext(j-2) or not.\n\nIf \"IY\" in \"B , IY,\u00a0 IY, F\" is repeated, shouldn't the skipConnect be [0, 0, 0, 1, 0, 0, 0, 0, 0 ] so that we know iY is repeated here? ",
        "gpt_answer": "The purpose of skipConnect is to keep track of whether an extended symbol Sext(j) is allowed to connect directly to Sext(j-2) or not. It does not keep track of repeated symbols. \n\nIn the example you provided, \"IY\" is repeated twice in the sequence \"B, IY, IY, F\". However, skipConnect is not used to keep track of this repetition. Instead, skipConnect is used to determine whether a particular extended symbol can be connected directly to the extended symbol two steps back in the sequence. \n\nFor example, if skipConnect[j] = 1, then Sext(j) can be connected directly to Sext(j-2). If skipConnect[j] = 0, then Sext(j) cannot be connected directly to Sext(j-2). \n\nI hope this clarifies the purpose of skipConnect. Let me know if you have any further questions!",
        "hash": "5eb8080e9978593092a483fb176c7b44ea2858e2dcb6c666360edeace90e668f"
    }
]